package component

import (
	sitter "github.com/smacker/go-tree-sitter"
	"wikinow/internal/parser"
	"wikinow/internal/ast"
)

templ List(node *sitter.Node, lines *[]string, c *parser.Ctx) {
	switch node.Type() {
		case "list":
			if ast.IsOrderedList(node) {
				<ol class="list-decimal list-outside ml-5">
					for i := 0; i < int(node.NamedChildCount()); i++ {
						@Parser(node.NamedChild(i), lines, c)
					}
				</ol>
			} else {
				<ul class="list-disc list-outside ml-5">
					for i := 0; i < int(node.NamedChildCount()); i++ {
						@Parser(node.NamedChild(i), lines, c)
					}
				</ul>
			}
		case "list_item":
			if ast.HasNestedList(node) {
				<li>
					@Parser(node.NamedChild(0), lines, c)
					@Parser(ast.GetNestedListNode(node), lines, c)
				</li>
			} else {
				<li>
					@Parser(node.NamedChild(0), lines, c)
				</li>
			}
		case "list_marker_minus":
			@Parser(node.NextNamedSibling(), lines, c)
		case "list_marker_star":
			@Parser(node.NextNamedSibling(), lines, c)
		case "list_marker_plus":
			@Parser(node.NextNamedSibling(), lines, c)
		case "list_marker_dot":
			@Parser(node.NextNamedSibling(), lines, c)
		case "list_marker_parenthesis":
			@Parser(node.NextNamedSibling(), lines, c)
	}
}
