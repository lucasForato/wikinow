package component

import (
	sitter "github.com/smacker/go-tree-sitter"
	"wikinow/internal/parser"
	"wikinow/internal/utils/ast"
)

templ BlockQuote(node *sitter.Node, lines *[]string, c *parser.Ctx) {
	switch node.Type() {
		case "block_quote":
			@Quote(node, lines, c)
		case "block_quote_marker":
			@Parser(node.NextNamedSibling(), lines, c)
	}
}

templ Quote(node *sitter.Node, lines *[]string, c *parser.Ctx) {
	<blockquote class="p-4 my-4 border-s-8 border-[#b16286] bg-[#2D2D2D] rounded-r">
		for i := 0; i < int(node.ChildCount()); i++ {
			switch node.Child(i).Type() {
				case "paragraph":
					for _, quote := range ast.SplitQuote(node.Child(i), *lines) {
						{ quote }
						<br/>
					}
					if ast.NextSiblingIsBlockContinuation(node.Child(i)) {
						<br/>
					}
			}
		}
	</blockquote>
}
