package component

import (
	"wikinow/ast"
	"wikinow/parser"
)

templ Parser(node *ast.Node) {
	if (*node).GetChildren() == nil {
		if (*node).GetType() == "Text" {
			@Text((*node).AsLeaf().GetContent())
		}
	}
	if (*node).GetChildren() != nil {
		if (*node).GetType() == "Document" {
			for _, child := range *(*node).GetChildren() {
				@Parser(&child)
			}
		}
		if (*node).GetType() == "Italic" {
			<i>
				for _, child := range *(*node).GetChildren() {
					@Parser(&child)
				}
			</i>
		}
		if (*node).GetType() == "Bold" {
			<strong>
				for _, child := range *(*node).GetChildren() {
					@Parser(&child)
				}
			</strong>
		}
		if (*node).GetType() == "Header" {
			switch n := (*node).(type) {
				case *parser.Header:
					if n.AsHeader().Level == 1 {
						<h1>
							for _, child := range *(*node).GetChildren() {
								@Parser(&child)
							}
						</h1>
					}
					if n.AsHeader().Level == 2 {
						<h2>
							for _, child := range *(*node).GetChildren() {
								@Parser(&child)
							}
						</h2>
					}
					if n.AsHeader().Level == 3 {
						<h3>
							for _, child := range *(*node).GetChildren() {
								@Parser(&child)
							}
						</h3>
					}
					if n.AsHeader().Level == 4 {
						<h4>
							for _, child := range *(*node).GetChildren() {
								@Parser(&child)
							}
						</h4>
					}
					if n.AsHeader().Level == 6 {
						<h5>
							for _, child := range *(*node).GetChildren() {
								@Parser(&child)
							}
						</h5>
					}
					if n.AsHeader().Level == 6 {
						<h6>
							for _, child := range *(*node).GetChildren() {
								@Parser(&child)
							}
						</h6>
					}
			}
		}
	}
}

templ Text(in string) {
	{ in }
}
