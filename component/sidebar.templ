package component

import (
	"html/template"
	"wikinow/component/icons"
	"wikinow/internal/filetree"
)

var anchor = template.Must(template.New("inline").Parse("{{ . }}"))

templ Sidebar(fileTree *filetree.TreeNode) {
	<div
		class="flex flex-col overflow-y-auto fixed py-1 pl-2 pr-5 h-screen"
	>
		<div class="p-4 mb-2">
			<h5 class="block font-sans text-xl antialiased font-semibold leading-snug tracking-normal text-blue-gray-900">
				Sidebar
			</h5>
		</div>
		<nav class="flex min-w-[240px] ml-4 flex-col font-sans text-base font-normal text-white">
			<div class="flex flex-col gap-1">
				<div class="flex items-center gap-1">
					@icons.Document("")
					@ActiveNode(fileTree, 0)
				</div>
				for _, node := range fileTree.Children {
					@Node(&node, 0)
				}
			</div>
		</nav>
	</div>
}

templ Node(node *filetree.TreeNode, level int) {
	if node.Type == filetree.File {
		<div class={ "flex items-center gap-1", templ.KV("ml-5", level > 0) }>
			@icons.Document("")
			@ActiveNode(node, level)
		</div>
	} else {
		if node.Title != "" && node.RelativePath != "" {
			<div class={ "flex items-center gap-1", templ.KV("ml-5", level > 0) }>
				@icons.ChevronDown("")
				@icons.Folder("")
				@ActiveNode(node, level)
			</div>
		}
		if node.Children != nil && len(node.Children) > 0 {
			<div class={ "gap-0.5 relative flex flex-col", templ.KV("ml-5", level > 0) }>
				<div class="border-l mb-2.5 border-b border-neutral-500 w-2.5 absolute inset-y-0 left-1.5"></div>
				for _, child := range node.Children {
					@Node(&child, level+1)
				}
			</div>
		}
	}
}

templ ActiveNode(node *filetree.TreeNode, level int) {
	if node.IsActive {
		<a
			href={ templ.SafeURL(node.RelativePath) }
			class="text-orange"
		>{ node.Title }</a>
	} else {
		<a
			href={ templ.SafeURL(node.RelativePath) }
			class="text-white"
		>{ node.Title }</a>
	}
}
